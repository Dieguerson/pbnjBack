type Product {
  price: String,
  thumbnail: String,
  title: String,
  innerId: ID!
}

input ProductInput {
  price: String,
  thumbnail: String,
  title: String,
}

scalar Date

type Message {
  author_age: String,
  author_alias: String,
  author_avatar: String,
  author_email: String,
  author_lastname: String,
  author_name: String,
  date: String,
  rawDate: Date,
  text: String,
  innerId: ID!
}

input MessageInput {
  author_age: String,
  author_alias: String,
  author_avatar: String,
  author_email: String,
  author_lastname: String,
  author_name: String,
  text: String,
}

type User {
  email: String,
  password: String,
  innerId: ID!
}

input UserInput {
  email: String,
  password: String,
}

type Query {
  getProducts: [Product]
  getMessages: [Message]
  getUsers: [User]
}

type Mutation {
  createProduct(data: ProductInput): Product
  createMessage(data: MessageInput): Message
  createUser(data: UserInput): User
}